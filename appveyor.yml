build: "off"
platform:
 - x64
 - x86
clone_depth: 1
clone_folder: C:\projects\narrowspark

environment:
  matrix:
    - dependencies: lowest
      PHP_VERSION: 7.3
    - dependencies: high
      PHP_VERSION: 7.3

matrix:
  fast_finish: true
#  allow_failures:

# cache is cleared when linked file is modified
cache:
  # Cache chocolatey packages
  - C:\ProgramData\chocolatey\bin -> .appveyor.yml
  - C:\ProgramData\chocolatey\lib -> .appveyor.yml
  # Cache php install
  - C:\tools\php -> .appveyor.yml
  # Cache composer
  - C:\projects\narrowspark\vendor -> composer.json
  - '%LOCALAPPDATA%\Composer\files -> composer.json'

init:
  - SET PHP=1
  - SET PATH=C:\Program Files\OpenSSL;C:\tools\php;%PATH%
  - SET ANSICON=121x90 (121x90)
  - SET COMPOSER_NO_INTERACTION=1
  - SET COMPOSER_UP=php composer.phar update --no-interaction --prefer-source --no-progress --profile --no-suggest --ansi
  - REG ADD "HKEY_CURRENT_USER\Software\Microsoft\Command Processor" /v DelayedExpansion /t REG_DWORD /d 1 /f

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($Env:APPVEYOR_PULL_REQUEST_NUMBER -AND $Env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$Env:APPVEYOR_ACCOUNT_NAME/$Env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $Env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # Install PHP
  - IF EXIST C:\tools\php (SET PHP=0)
  - IF %PHP%==1 appveyor DownloadFile "https://raw.githubusercontent.com/prisis/ps-install-php/master/Install-PHP.ps1"
  - ps: if (-not (Test-Path C:\tools\php)) {.\Install-PHP.ps1 -InstallPath C:\tools\php -Version $Env:PHP_VERSION -Highest -Arch $Env:PLATFORM -Extensions mbstring,intl,openssl,fileinfo,pdo_sqlite,curl,sodium}
  # Install redis and start
  - ps: |
      IF ($Env:PLATFORM -Match "x64" -And $Env:PHP -eq 1) {
        nuget install redis-64 -excludeversion -Verbosity quiet
        redis-64\tools\redis-server.exe --service-install
        redis-64\tools\redis-server.exe --service-start
      }
  - IF %PHP%==1 cd C:\tools\php
  # PHP settings and extensions
  - IF %PHP%==1 echo zend_extension=php_opcache.dll >> php.ini
  - IF %PHP%==1 echo max_execution_time=1200 >> php.ini
  - IF %PHP%==1 echo date.timezone="Europe/Berlin >> php.ini
  - IF %PHP%==1 echo opcache.enable_cli=1 >> php.ini
  - IF %PHP%==1 echo apc.enable_cli=1 >> php.ini
  - IF %APPVEYOR_REPO_BRANCH%==master (SET COMPOSER_ROOT_VERSION=dev-master) ELSE (SET COMPOSER_ROOT_VERSION=%APPVEYOR_REPO_BRANCH%.x-dev)
  - cd C:\projects\narrowspark
  - php -r "readfile('https://getcomposer.org/installer');" | php
  # Matrix
  - php composer.phar global require --no-progress --no-scripts --no-plugins narrowspark/automatic-composer-prefetcher dev-master
  - |
    IF %dependencies%==high appveyor-retry %COMPOSER_UP%
    IF %dependencies%==lowest appveyor-retry %COMPOSER_UP% --prefer-lowest --prefer-stable
  - cd build/appveyor
  - appveyor DownloadFile https://cdn.rawgit.com/prisis/43a2a7b137998ac92e24ee4daaa8e296/raw/681b89b8e156750de46558ead661509c468fb9a2/try_catch.sh

test_script:
  - cd C:\projects\narrowspark
  - sh ./build/appveyor/phpunit.sh
