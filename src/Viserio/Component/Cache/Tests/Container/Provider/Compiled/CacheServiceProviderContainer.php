<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Cache\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class CacheServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Psr\Cache\CacheItemPoolInterface::class => 'geta5b685927e5b9bb2231acfb11f144d6dad3923af3df18927d2541a017feb40a3',
            \Viserio\Contract\Cache\Manager::class => 'get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8',
            'config' => 'get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256',
        ];
        $this->aliases = [
            \Psr\SimpleCache\CacheInterface::class => \Psr\Cache\CacheItemPoolInterface::class,
            \Viserio\Component\Cache\CacheManager::class => \Viserio\Contract\Cache\Manager::class,
            'cache' => \Viserio\Contract\Cache\Manager::class,
            'cache.store' => \Psr\Cache\CacheItemPoolInterface::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }

    /**
     * Returns the public Psr\Cache\CacheItemPoolInterface shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Definition\ReferenceDefinition::getDriver()
     */
    protected function geta5b685927e5b9bb2231acfb11f144d6dad3923af3df18927d2541a017feb40a3()
    {
        return $this->services[\Psr\Cache\CacheItemPoolInterface::class] = ($this->services[\Viserio\Contract\Cache\Manager::class] ?? $this->get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8())->getDriver();
    }

    /**
     * Returns the public Viserio\Contract\Cache\Manager shared service.
     *
     * @return \Viserio\Component\Cache\CacheManager
     */
    protected function get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8(): \Viserio\Component\Cache\CacheManager
    {
        $this->services[\Viserio\Contract\Cache\Manager::class] = $instance = new \Viserio\Component\Cache\CacheManager([
            'viserio' => [
                'cache' => [
                    'default' => 'array',
                    'drivers' => [],
                    'namespace' => false,
                ],
            ],
        ]);

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Returns the public config service.
     *
     * @return array
     */
    protected function get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256(): array
    {
        return [
            'viserio' => [
                'cache' => [
                    'default' => 'array',
                    'drivers' => [],
                    'namespace' => false,
                ],
            ],
        ];
    }
}
