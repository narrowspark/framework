<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Cron\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class CronServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * {@inheritdoc}
     */
    protected $methodMapping = [
        'Psr\\Cache\\CacheItemPoolInterface' => 'geta5b685927e5b9bb2231acfb11f144d6dad3923af3df18927d2541a017feb40a3',
        \Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class => 'getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31',
        \Viserio\Component\Console\Application::class => 'get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a',
        \Viserio\Contract\Cache\Manager::class => 'get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8',
        \Viserio\Contract\Cron\Schedule::class => 'geta26d67fa892100d6b77ea6dc2b0dc4f9c1b1f4b3151bead4813eaa769f637355',
        \Viserio\Component\Cron\Command\CronListCommand::class => 'get87b164346432352f4ee3e34b1f25c4c1c674833a5bc6a84bc08c6a0f38a7f2fc',
        \Viserio\Component\Cron\Command\ScheduleRunCommand::class => 'getfad3fe2b13bcec06db5de00d5628b79d397c81d4135d8b09f1326c0368b5b805',
        \Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class => 'get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62',
        \Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class => 'get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471',
        'config' => 'get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256',
        'console.command.ids' => 'getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18',
    ];

    /**
     * {@inheritdoc}
     */
    protected $tags = [
        'console.command' => [
            0 => \Viserio\Component\Cron\Command\CronListCommand::class,
            1 => \Viserio\Component\Cron\Command\ScheduleRunCommand::class,
            2 => \Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class,
            3 => \Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class,
        ],
    ];

    /**
     * {@inheritdoc}
     */
    protected $aliases = [
        'Psr\\SimpleCache\\CacheInterface' => 'Psr\\Cache\\CacheItemPoolInterface',
        \Symfony\Component\Console\Application::class => \Viserio\Component\Console\Application::class,
        \Viserio\Component\Cache\CacheManager::class => \Viserio\Contract\Cache\Manager::class,
        \Viserio\Component\Cron\Schedule::class => \Viserio\Contract\Cron\Schedule::class,
        'cache' => \Viserio\Contract\Cache\Manager::class,
        'cache.store' => 'Psr\\Cache\\CacheItemPoolInterface',
        'cerebro' => \Viserio\Component\Console\Application::class,
        'console' => \Viserio\Component\Console\Application::class,
    ];

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            'Psr\\Container\\ContainerInterface' => true,
            'Viserio\\Contract\\Container\\Factory' => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
            'service_container' => true,
        ];
    }

    /**
     * @return mixed An instance returned by Viserio\Component\Container\Definition\ReferenceDefinition::getDriver()
     */
    protected function geta5b685927e5b9bb2231acfb11f144d6dad3923af3df18927d2541a017feb40a3()
    {
        return $this->services['Psr\\Cache\\CacheItemPoolInterface'] = ($this->services[\Viserio\Contract\Cache\Manager::class] ?? $this->get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8())->getDriver();
    }

    /**
     * @return \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
     */
    protected function getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31(): \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
    {
        return $this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] = new \Viserio\Component\Console\CommandLoader\IteratorCommandLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'cron:list' => ($this->services[\Viserio\Component\Cron\Command\CronListCommand::class] ?? $this->get87b164346432352f4ee3e34b1f25c4c1c674833a5bc6a84bc08c6a0f38a7f2fc());

            yield 'cron:run' => ($this->services[\Viserio\Component\Cron\Command\ScheduleRunCommand::class] ?? $this->getfad3fe2b13bcec06db5de00d5628b79d397c81d4135d8b09f1326c0368b5b805());

            yield 'option:dump' => ($this->services[\Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class] ?? $this->get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62());

            yield 'option:read' => ($this->services[\Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class] ?? $this->get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471());
        }, 4));
    }

    /**
     * @return \Viserio\Component\Console\Application
     */
    protected function get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a(): \Viserio\Component\Console\Application
    {
        $this->services[\Viserio\Component\Console\Application::class] = $instance = new \Viserio\Component\Console\Application();

        $instance->setContainer($this);

        if ($this->has(\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class)) {
            $instance->setCommandLoader(($this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] ?? $this->getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31()));
        }

        return $instance;
    }

    /**
     * @return \Viserio\Component\Cache\CacheManager
     */
    protected function get4edf51c380c969168368957bf52a839d9c7ad305fd6b6800a0670e88a8f145b8(): \Viserio\Component\Cache\CacheManager
    {
        $this->services[\Viserio\Contract\Cache\Manager::class] = $instance = new \Viserio\Component\Cache\CacheManager([
            'viserio' => [
                'cache' => [
                    'default' => 'array',
                    'drivers' => [
                    ],
                    'namespace' => false,
                ],
                'cron' => [
                    'console' => 'cerebro',
                    'path' => '/var/www/framework/src/Viserio/Component/Cron/Tests/Container',
                ],
            ],
        ]);

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * @return \Viserio\Component\Cron\Schedule
     */
    protected function geta26d67fa892100d6b77ea6dc2b0dc4f9c1b1f4b3151bead4813eaa769f637355(): \Viserio\Component\Cron\Schedule
    {
        $this->services[\Viserio\Contract\Cron\Schedule::class] = $instance = new \Viserio\Component\Cron\Schedule('/var/www/framework/src/Viserio/Component/Cron/Tests/Container', 'cerebro');

        if ($this->has('Psr\\Cache\\CacheItemPoolInterface')) {
            $instance->setCacheItemPool(($this->services['Psr\\Cache\\CacheItemPoolInterface'] ?? $this->geta5b685927e5b9bb2231acfb11f144d6dad3923af3df18927d2541a017feb40a3()));
        }

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * @return \Viserio\Component\Cron\Command\CronListCommand
     */
    protected function get87b164346432352f4ee3e34b1f25c4c1c674833a5bc6a84bc08c6a0f38a7f2fc(): \Viserio\Component\Cron\Command\CronListCommand
    {
        $this->services[\Viserio\Component\Cron\Command\CronListCommand::class] = $instance = new \Viserio\Component\Cron\Command\CronListCommand();

        $instance->setName('cron:list');

        return $instance;
    }

    /**
     * @return \Viserio\Component\Cron\Command\ScheduleRunCommand
     */
    protected function getfad3fe2b13bcec06db5de00d5628b79d397c81d4135d8b09f1326c0368b5b805(): \Viserio\Component\Cron\Command\ScheduleRunCommand
    {
        $this->services[\Viserio\Component\Cron\Command\ScheduleRunCommand::class] = $instance = new \Viserio\Component\Cron\Command\ScheduleRunCommand();

        $instance->setName('cron:run');

        return $instance;
    }

    /**
     * @return \Viserio\Component\OptionsResolver\Command\OptionDumpCommand
     */
    protected function get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62(): \Viserio\Component\OptionsResolver\Command\OptionDumpCommand
    {
        $this->services[\Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class] = $instance = new \Viserio\Component\OptionsResolver\Command\OptionDumpCommand();

        $instance->setName('option:dump');

        return $instance;
    }

    /**
     * @return \Viserio\Component\OptionsResolver\Command\OptionReaderCommand
     */
    protected function get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471(): \Viserio\Component\OptionsResolver\Command\OptionReaderCommand
    {
        $this->services[\Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class] = $instance = new \Viserio\Component\OptionsResolver\Command\OptionReaderCommand();

        $instance->setName('option:read');

        return $instance;
    }

    /**
     * @return array
     */
    protected function get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256(): array
    {
        return [
            'viserio' => [
                'cache' => [
                    'default' => 'array',
                    'drivers' => [
                    ],
                    'namespace' => false,
                ],
                'cron' => [
                    'console' => 'cerebro',
                    'path' => '/var/www/framework/src/Viserio/Component/Cron/Tests/Container',
                ],
            ],
        ];
    }

    /**
     * @return array
     */
    protected function getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18(): array
    {
        return [];
    }
}
