<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Console\Tests\Container\Pipeline\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class AddConsoleCommandPipeContainerTestProcess extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class => 'getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31',
            \Viserio\Component\Console\Application::class => 'get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a',
            \Viserio\Component\Console\Tests\Fixture\GoodbyeCommand::class => 'gete6d96f60dc8eecd0ddc5d0637aa311884d82fd79d6e6c399780330b9c32ec6ee',
            \Viserio\Component\Console\Tests\Fixture\HelloCommand::class => 'getfc4803a678ce90c6fc6f0e95d290dfc6611678e8fba62563a448e7693b5f92d8',
            \Viserio\Component\Console\Tests\Fixture\LazyWhiner::class => 'geta24ae0504e8b69758f9ed0f3c6dab87df4b462bbae555494e87c372521f25a31',
            'console.command.ids' => 'getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18',
        ];
        $this->aliases = [
            \Symfony\Component\Console\Application::class => \Viserio\Component\Console\Application::class,
            'cerebro' => \Viserio\Component\Console\Application::class,
            'console' => \Viserio\Component\Console\Application::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }

    /**
     * Returns the public Symfony\Component\Console\CommandLoader\CommandLoaderInterface shared service.
     *
     * @return \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
     */
    protected function getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31(): \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
    {
        return $this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] = new \Viserio\Component\Console\CommandLoader\IteratorCommandLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'hello' => ($this->services[\Viserio\Component\Console\Tests\Fixture\HelloCommand::class] ?? $this->getfc4803a678ce90c6fc6f0e95d290dfc6611678e8fba62563a448e7693b5f92d8());

            yield 'goodbye' => ($this->services[\Viserio\Component\Console\Tests\Fixture\GoodbyeCommand::class] ?? $this->gete6d96f60dc8eecd0ddc5d0637aa311884d82fd79d6e6c399780330b9c32ec6ee());
        }, 2));
    }

    /**
     * Returns the public Viserio\Component\Console\Application shared service.
     *
     * @return \Viserio\Component\Console\Application
     */
    protected function get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a(): \Viserio\Component\Console\Application
    {
        $this->services[\Viserio\Component\Console\Application::class] = $instance = new \Viserio\Component\Console\Application();

        $instance->setContainer($this);

        if ($this->has(\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class)) {
            $instance->setCommandLoader(($this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] ?? $this->getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31()));
        }

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Console\Tests\Fixture\GoodbyeCommand shared service.
     *
     * @return \Viserio\Component\Console\Tests\Fixture\GoodbyeCommand
     */
    protected function gete6d96f60dc8eecd0ddc5d0637aa311884d82fd79d6e6c399780330b9c32ec6ee(): \Viserio\Component\Console\Tests\Fixture\GoodbyeCommand
    {
        $this->services[\Viserio\Component\Console\Tests\Fixture\GoodbyeCommand::class] = $instance = new \Viserio\Component\Console\Tests\Fixture\GoodbyeCommand();

        $instance->setName('goodbye');

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Console\Tests\Fixture\HelloCommand shared service.
     *
     * @return \Viserio\Component\Console\Tests\Fixture\HelloCommand
     */
    protected function getfc4803a678ce90c6fc6f0e95d290dfc6611678e8fba62563a448e7693b5f92d8(): \Viserio\Component\Console\Tests\Fixture\HelloCommand
    {
        $this->services[\Viserio\Component\Console\Tests\Fixture\HelloCommand::class] = $instance = new \Viserio\Component\Console\Tests\Fixture\HelloCommand();

        $instance->setName('hello');

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Console\Tests\Fixture\LazyWhiner shared service.
     *
     * @return \Viserio\Component\Console\Tests\Fixture\LazyWhiner
     */
    protected function geta24ae0504e8b69758f9ed0f3c6dab87df4b462bbae555494e87c372521f25a31(): \Viserio\Component\Console\Tests\Fixture\LazyWhiner
    {
        return $this->services[\Viserio\Component\Console\Tests\Fixture\LazyWhiner::class] = new \Viserio\Component\Console\Tests\Fixture\LazyWhiner($this);
    }

    /**
     * Returns the public console.command.ids service.
     *
     * @return array
     */
    protected function getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18(): array
    {
        return [];
    }
}
