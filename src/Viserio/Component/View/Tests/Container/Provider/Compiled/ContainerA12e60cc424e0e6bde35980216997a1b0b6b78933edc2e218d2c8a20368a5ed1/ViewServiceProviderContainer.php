<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace ContainerA12e60cc424e0e6bde35980216997a1b0b6b78933edc2e218d2c8a20368a5ed1;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class ViewServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * List of target dirs.
     *
     * @var array
     */
    private $targetDirs = [];

    /**
     * Path to the container dir.
     *
     * @var string
     */
    private $containerDir;

    /**
     * Create a new Compiled Container instance.
     *
     * @param array  $buildParameters
     * @param string $containerDir
     *
     * @var string $containerDir
     */
    public function __construct(array $buildParameters = [], string $containerDir = __DIR__)
    {
        $this->services = $this->privates = [];
        $dir = $this->targetDirs[0] = \dirname($containerDir);

        for ($i = 1; $i <= 5; $i++) {
            $this->targetDirs[$i] = $dir = \dirname($dir);
        }

        $this->containerDir = $containerDir;
        $this->parameters = \array_merge([
            'container.dumper.inline_factories' => true,
            'container.dumper.inline_class_loader' => false,
        ], $buildParameters);
        $this->methodMapping = [
            \Viserio\Contract\View\EngineResolver::class => 'getff73b374d52eb13f0773f58273de538d62944effed5c8e2a7caa31b6d2180e5b',
            \Viserio\Contract\View\Factory::class => 'getb6b69b8c40146f590f39a23a8d000f621d6288e79e53d4fdbeae0164b92c7d63',
            \Viserio\Contract\View\Finder::class => 'get2bc187b27da90a561b690d6fd54a3000d8276c6e5b8e8167ce59a4b9355b3859',
            \Viserio\Component\View\Engine\FileEngine::class => 'get1a6c73ea96b910b7c8cc9eccb8a2efd9908e964162cfa207eeef703514994b04',
            \Viserio\Component\View\Engine\PhpEngine::class => 'getd01d428260fd74997b150257850eb533cb546f9df452b1033a6c2fae22551a64',
            'config' => 'get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256',
        ];
        $this->aliases = [
            \Viserio\Component\View\ViewFactory::class => \Viserio\Contract\View\Factory::class,
            \Viserio\Component\View\ViewFinder::class => \Viserio\Contract\View\Finder::class,
            'view' => \Viserio\Contract\View\Factory::class,
            'view.engine.resolver' => \Viserio\Contract\View\EngineResolver::class,
            'view.finder' => \Viserio\Contract\View\Finder::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return require $this->containerDir . '/removed-ids.php';
    }

    /**
     * Returns the public Viserio\Contract\View\EngineResolver service.
     *
     * @return \Viserio\Component\View\Engine\IteratorViewEngineLoader
     */
    protected function getff73b374d52eb13f0773f58273de538d62944effed5c8e2a7caa31b6d2180e5b(): \Viserio\Component\View\Engine\IteratorViewEngineLoader
    {
        return new \Viserio\Component\View\Engine\IteratorViewEngineLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'file' => ($this->services[\Viserio\Component\View\Engine\FileEngine::class] ?? $this->get1a6c73ea96b910b7c8cc9eccb8a2efd9908e964162cfa207eeef703514994b04());

            yield 'php' => ($this->services[\Viserio\Component\View\Engine\PhpEngine::class] ?? $this->getd01d428260fd74997b150257850eb533cb546f9df452b1033a6c2fae22551a64());
        }, 2));
    }

    /**
     * Returns the public Viserio\Contract\View\Factory shared service.
     *
     * @return \Viserio\Component\View\ViewFactory
     */
    protected function getb6b69b8c40146f590f39a23a8d000f621d6288e79e53d4fdbeae0164b92c7d63(): \Viserio\Component\View\ViewFactory
    {
        $this->services[\Viserio\Contract\View\Factory::class] = $instance = new \Viserio\Component\View\ViewFactory(new \Viserio\Component\View\Engine\IteratorViewEngineLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'file' => ($this->services[\Viserio\Component\View\Engine\FileEngine::class] ?? $this->get1a6c73ea96b910b7c8cc9eccb8a2efd9908e964162cfa207eeef703514994b04());

            yield 'php' => ($this->services[\Viserio\Component\View\Engine\PhpEngine::class] ?? $this->getd01d428260fd74997b150257850eb533cb546f9df452b1033a6c2fae22551a64());
        }, 2)), ($this->services[\Viserio\Contract\View\Finder::class] ?? $this->get2bc187b27da90a561b690d6fd54a3000d8276c6e5b8e8167ce59a4b9355b3859()));

        $instance->share('app', $this);

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\View\Finder shared service.
     *
     * @return \Viserio\Component\View\ViewFinder
     */
    protected function get2bc187b27da90a561b690d6fd54a3000d8276c6e5b8e8167ce59a4b9355b3859(): \Viserio\Component\View\ViewFinder
    {
        return $this->services[\Viserio\Contract\View\Finder::class] = new \Viserio\Component\View\ViewFinder([
            'viserio' => [
                'view' => [
                    'paths' => [
                        0 => ($this->targetDirs[2] . '/Fixture/'),
                        1 => $this->targetDirs[1],
                    ],
                    'extensions' => [
                        0 => 'phtml',
                        1 => 'php',
                    ],
                ],
            ],
        ]);
    }

    /**
     * Returns the public Viserio\Component\View\Engine\FileEngine shared service.
     *
     * @return \Viserio\Component\View\Engine\FileEngine
     */
    protected function get1a6c73ea96b910b7c8cc9eccb8a2efd9908e964162cfa207eeef703514994b04(): \Viserio\Component\View\Engine\FileEngine
    {
        return $this->services[\Viserio\Component\View\Engine\FileEngine::class] = new \Viserio\Component\View\Engine\FileEngine();
    }

    /**
     * Returns the public Viserio\Component\View\Engine\PhpEngine shared service.
     *
     * @return \Viserio\Component\View\Engine\PhpEngine
     */
    protected function getd01d428260fd74997b150257850eb533cb546f9df452b1033a6c2fae22551a64(): \Viserio\Component\View\Engine\PhpEngine
    {
        return $this->services[\Viserio\Component\View\Engine\PhpEngine::class] = new \Viserio\Component\View\Engine\PhpEngine();
    }

    /**
     * Returns the public config service.
     *
     * @return array
     */
    protected function get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256(): array
    {
        return [
            'viserio' => [
                'view' => [
                    'paths' => [
                        0 => ($this->targetDirs[2] . '/Fixture/'),
                        1 => $this->targetDirs[1],
                    ],
                    'extensions' => [
                        0 => 'phtml',
                        1 => 'php',
                    ],
                ],
            ],
        ];
    }
}
