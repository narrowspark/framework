<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Filesystem\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class FilesystemServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Viserio\Contract\Filesystem\Filesystem::class => 'get787a79c940e7519357cde00935d657a813a0ce7c7b555cf3cb98d8c2263d18c6',
        ];
        $this->aliases = [
            \Viserio\Component\Filesystem\Filesystem::class => \Viserio\Contract\Filesystem\Filesystem::class,
            'files' => \Viserio\Contract\Filesystem\Filesystem::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }

    /**
     * Returns the public Viserio\Contract\Filesystem\Filesystem shared service.
     *
     * @return \Viserio\Component\Filesystem\Filesystem
     */
    protected function get787a79c940e7519357cde00935d657a813a0ce7c7b555cf3cb98d8c2263d18c6(): \Viserio\Component\Filesystem\Filesystem
    {
        return $this->services[\Viserio\Contract\Filesystem\Filesystem::class] = new \Viserio\Component\Filesystem\Filesystem();
    }
}
