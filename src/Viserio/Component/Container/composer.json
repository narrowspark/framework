{
    "name"       : "viserio/container",
    "type"       : "library",
    "description": "The Viserio Container package.",
    "keywords"   : ["framework", "narrowspark", "viserio", "container", "container-interop", "di", "dependency", "injection", "dependency injection"],
    "license"    : "MIT",
    "homepage"   : "http://github.com/narrowspark/framework",
    "support"    : {
        "issues": "https://github.com/narrowspark/framework/issues",
        "source": "https://github.com/narrowspark/framework"
    },
    "authors"    : [
        {
          "name"    : "Daniel Bannert",
          "email"   : "d.bannert@anolilab.de",
          "homepage": "http://www.anolilab.de",
          "role"    : "Developer"
        }
    ],
    "require": {
        "php"                                        : "^7.2",
        "ext-mbstring"                               : "*",
        "container-interop/service-provider"         : "^0.3",
        "php-di/invoker"                             : "^2.0",
        "psr/container"                              : "^1.0",
        "viserio/contracts"                          : "self.version"
    },
    "require-dev": {
        "mockery/mockery"                            : "^0.9",
        "mouf/picotainer"                            : "^1.0",
        "phpunit/phpunit"                            : "^6.0",
        "narrowspark/testing-helper"                 : "^4.0"
    },
    "provide": {
        "psr/container-implementation"               : "^1.0"
    },
    "autoload": {
        "psr-4": {
            "Viserio\\Component\\Container\\"        : ""
        },
        "exclude-from-classmap"                      : ["/Tests/"]
    },
    "autoload-dev": {
        "psr-4": {
            "Viserio\\Component\\Container\\Tests\\" : "Tests/"
        }
    },
    "extra": {
        "branch-alias": {
            "dev-master"                             : "1.0-dev"
        }
    },
    "minimum-stability"                              : "dev",
    "prefer-stable"                                  : true
}
