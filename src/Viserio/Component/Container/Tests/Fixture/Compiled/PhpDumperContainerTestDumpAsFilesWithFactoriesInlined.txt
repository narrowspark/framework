Array
(
    [Container%s/removed-ids.php] => <?php

return [
    \Psr\Container\ContainerInterface::class => true,
    \Viserio\Contract\Container\Factory::class => true,
    \Viserio\Contract\Container\TaggedContainer::class => true,
    'container' => true,
    'decorated.pif-pouf' => true,
    'decorator_service.inner' => true,
    'factory_simple' => true,
    'inlined' => true,
    'new_factory' => true,
];

    [Container%s/PhpDumperContainerTestDumpAsFilesWithFactoriesInlined.php] => <?php

declare(strict_types=1);

namespace Container%s;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class PhpDumperContainerTestDumpAsFilesWithFactoriesInlined extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Path to the container dir.
     *
     * @var string $containerDir
     */
    private $containerDir;

    /**
     * Create a new Compiled Container instance.
     *
     * @param array  $buildParameters
     * @param string $containerDir
     */
    public function __construct(array $buildParameters = [], string $containerDir = __DIR__)
    {
        $this->services = $this->privates = [];
        $this->containerDir = $containerDir;
        $this->targetDir = \dirname($containerDir);

        $this->parameters = \array_merge([
            'baz_class' => 'BazClass',
            'foo_class' => \Viserio\Component\Container\Tests\Fixture\FooClass::class,
            'foo' => 'bar',
            'container.dumper.inline_factories' => true,
            'container.dumper.inline_class_loader' => true,
            'container.dumper.as_files' => true,
        ], $buildParameters);
        $this->methodMapping = [
            'BAR' => 'getad640dbf7c1608c6f6a2a6c6157f6917bae4cb465c8345494056c9a6bdb5f0fa',
            'BAR2' => 'get12e44d70c4e33b36ecf87b93cf3b88d8a262ba961a17a824845ad04fc6b955d5',
            'bar' => 'get91b123d3875702532e36683116824223d37b37377003156fc244abb2a82fec9c',
            'bar2' => 'getbb42faa8373ed25c909e5cb63c9611439de94dce36c9bb6dd548d71818f50fa9',
            'baz' => 'get601ebbf111eade1dea92676086466647f1ade8dccb6090fb680c0566ce14bea4',
            'decorator_service' => 'get81279958481caf2641b81a938eaa7a3e9d80ae94d8f7e3c3b481d8b2c68eafcc',
            'decorator_service_with_name' => 'getf47b3e785035a62f927b2936421b8df8145e2d2183e4fee65f91952105b3afd9',
            'deprecated_service' => 'get59550b1b4489a4b2ddadc24c5df5b7cdbd2f4a7754f153ccbdfada4352857216',
            'factory_service' => 'get80a3af9e0f4cfa1f056ede107225fdf4b9e348c2f93127b7251db5275fb42120',
            'factory_service_simple' => 'get48657054edacc13933b2cca17e1ca48fe6e930735fcd97d7a4742867c539402f',
            'foo' => 'get55df4251026261c15e5362b72748729c5413605491a6b31caf07b0571c04af5f',
            'foo.baz' => 'getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f',
            'foo_bar' => 'get7289489f154b307caaa9ee39fe16fd0bf67124c6bb9e318c3c8c564dc56b0bf8',
            'foo_with_inline' => 'getc5f5cd268dfe45adaa2279c68e5cea50f7488087326a53a4ae23dd4c7061aaf0',
            'lazy_context' => 'getdc1c499a0f494602672f377f9bb02214800d1660c4d5bf3fb7e1b79129e0c450',
            'lazy_context_ignore_invalid_ref' => 'get8a659c3269b77f017450246fce119ae557d25df3a610fa1165dd1806593bf3c8',
            'method_call1' => 'get0899bb57538ad66e61bbb7a926f8a4d69a751a01a489c784fb2444ac8482d492',
            'new_factory_service' => 'get58b97d8df968af47a0b2821f06d138def536564b0190b530090299c0d9111f98',
            'non_shared_foo' => 'getcba1ce6a81e4359bd94e9626a0ddc4a8b6b2f800f12790142b79fe4db7e1dc4a',
            'service_from_static_method' => 'getdc8bbfdfa201402711588c5f8d69cd01bb4b766060eef548d3c0bcee29730ab7',
        ];
        $this->aliases = [
            'alias_for_foo' => 'foo',
            'decorated' => 'decorator_service_with_name',
        ];
        $this->syntheticIds = [
            'request' => true,
        ];
    }

    /**
     * Returns the public BAR shared service.
     *
     * @return \stdClass
     */
    protected function getad640dbf7c1608c6f6a2a6c6157f6917bae4cb465c8345494056c9a6bdb5f0fa(): \stdClass
    {
        $this->services['BAR'] = $instance = new \stdClass();

        $instance->bar = ($this->services['bar'] ?? $this->get91b123d3875702532e36683116824223d37b37377003156fc244abb2a82fec9c());

        return $instance;
    }

    /**
     * Returns the public BAR2 shared service.
     *
     * @return \stdClass
     */
    protected function get12e44d70c4e33b36ecf87b93cf3b88d8a262ba961a17a824845ad04fc6b955d5(): \stdClass
    {
        return $this->services['BAR2'] = new \stdClass();
    }

    /**
     * Returns the public bar shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\FooClass
     */
    protected function get91b123d3875702532e36683116824223d37b37377003156fc244abb2a82fec9c(): \Viserio\Component\Container\Tests\Fixture\FooClass
    {
        include_once $this->targetDir.''.'/FooClass.php';

        return $this->services['bar'] = new \Viserio\Component\Container\Tests\Fixture\FooClass('foo', ($this->services['foo.baz'] ?? $this->getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f()), 'foo_bar');
    }

    /**
     * Returns the public bar2 shared service.
     *
     * @return \stdClass
     */
    protected function getbb42faa8373ed25c909e5cb63c9611439de94dce36c9bb6dd548d71818f50fa9(): \stdClass
    {
        return $this->services['bar2'] = new \stdClass();
    }

    /**
     * Returns the public baz shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\File\Baz
     */
    protected function get601ebbf111eade1dea92676086466647f1ade8dccb6090fb680c0566ce14bea4(): \Viserio\Component\Container\Tests\Fixture\File\Baz
    {
        include_once $this->targetDir.''.'/File/Baz.php';

        $this->services['baz'] = $instance = new \Viserio\Component\Container\Tests\Fixture\File\Baz();

        $instance->setFoo(($this->services['foo_with_inline'] ?? $this->getc5f5cd268dfe45adaa2279c68e5cea50f7488087326a53a4ae23dd4c7061aaf0()));

        return $instance;
    }

    /**
     * Returns the public decorator_service shared service.
     *
     * @return \stdClass
     */
    protected function get81279958481caf2641b81a938eaa7a3e9d80ae94d8f7e3c3b481d8b2c68eafcc(): \stdClass
    {
        return $this->services['decorator_service'] = new \stdClass();
    }

    /**
     * Returns the public decorator_service_with_name shared service.
     *
     * @return \stdClass
     */
    protected function getf47b3e785035a62f927b2936421b8df8145e2d2183e4fee65f91952105b3afd9(): \stdClass
    {
        return $this->services['decorator_service_with_name'] = new \stdClass();
    }

    /**
     * Returns the public deprecated_service shared service.
     *
     * @return \stdClass
     *
     * @deprecated The [deprecated_service] service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function get59550b1b4489a4b2ddadc24c5df5b7cdbd2f4a7754f153ccbdfada4352857216(): \stdClass
    {
        @\trigger_error('The [deprecated_service] service is deprecated. You should stop using it, as it will be removed in the future.', \E_USER_DEPRECATED);

        return $this->services['deprecated_service'] = new \stdClass();
    }

    /**
     * Returns the public factory_service shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Definition\ReferenceDefinition::getInstance()
     */
    protected function get80a3af9e0f4cfa1f056ede107225fdf4b9e348c2f93127b7251db5275fb42120()
    {
        return $this->services['factory_service'] = ($this->services['foo.baz'] ?? $this->getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f())->getInstance();
    }

    /**
     * Returns the public factory_service_simple shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Definition\ReferenceDefinition::getInstance()
     */
    protected function get48657054edacc13933b2cca17e1ca48fe6e930735fcd97d7a4742867c539402f()
    {
        include_once $this->targetDir.''.'/FactoryClass.php';

        return $this->services['factory_service_simple'] = $this->get0ee2675938f7c7d7d93d4233ea06b7dba8af47f490245918357abd64c3653e01()->getInstance();
    }

    /**
     * Returns the public foo shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Tests\Fixture\FooClass::getInstance()
     */
    protected function get55df4251026261c15e5362b72748729c5413605491a6b31caf07b0571c04af5f()
    {
        include_once $this->targetDir.''.'/FooClass.php';

        $a = ($this->services['foo.baz'] ?? $this->getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f());

        $this->services['foo'] = $instance = \Viserio\Component\Container\Tests\Fixture\FooClass::getInstance('foo', $a, [
            ' bar' => 'foo is bar',
            'foobar' => ' bar',
        ], true, $this);

        \Viserio\Component\Container\Tests\Fixture\FooClass::foo = 'bar';
        $instance->moo = $a;
        $instance->qux = [
            ' bar' => 'foo is bar',
            'foobar' => ' bar',
        ];
        $instance->setBar(($this->services['bar'] ?? $this->get91b123d3875702532e36683116824223d37b37377003156fc244abb2a82fec9c()));
        $instance->initialize();

        return $instance;
    }

    /**
     * Returns the public foo.baz shared service.
     *
     * @return array
     */
    protected function getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f(): array
    {
        return $this->services['foo.baz'] = [
            0 => 'BazClass',
            1 => 'getInstance',
        ];
    }

    /**
     * Returns the public foo_bar service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\FooClass
     */
    protected function get7289489f154b307caaa9ee39fe16fd0bf67124c6bb9e318c3c8c564dc56b0bf8(): \Viserio\Component\Container\Tests\Fixture\FooClass
    {
        include_once $this->targetDir.''.'/FooClass.php';

        return new \Viserio\Component\Container\Tests\Fixture\FooClass(($this->services['deprecated_service'] ?? $this->get59550b1b4489a4b2ddadc24c5df5b7cdbd2f4a7754f153ccbdfada4352857216()));
    }

    /**
     * Returns the public foo_with_inline shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\File\Foo
     */
    protected function getc5f5cd268dfe45adaa2279c68e5cea50f7488087326a53a4ae23dd4c7061aaf0(): \Viserio\Component\Container\Tests\Fixture\File\Foo
    {
        include_once $this->targetDir.''.'/File/Foo.php';
        include_once $this->targetDir.''.'/File/Bar.php';

        $this->services['foo_with_inline'] = $instance = new \Viserio\Component\Container\Tests\Fixture\File\Foo();

        $a = new \Viserio\Component\Container\Tests\Fixture\File\Bar();
        $a->pub = 'pub';
        $a->setBaz(($this->services['baz'] ?? $this->get601ebbf111eade1dea92676086466647f1ade8dccb6090fb680c0566ce14bea4()));

        $instance->setBar($a);

        return $instance;
    }

    /**
     * Returns the public lazy_context shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\File\LazyContext
     */
    protected function getdc1c499a0f494602672f377f9bb02214800d1660c4d5bf3fb7e1b79129e0c450(): \Viserio\Component\Container\Tests\Fixture\File\LazyContext
    {
        include_once $this->targetDir.''.'/File/LazyContext.php';

        return $this->services['lazy_context'] = new \Viserio\Component\Container\Tests\Fixture\File\LazyContext(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'k1' => ($this->services['foo.baz'] ?? $this->getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f());
            yield 'k2' => $this;
        }, 2), new \Viserio\Component\Container\RewindableGenerator(static function () {
            return new \EmptyIterator();
        }, 0));
    }

    /**
     * Returns the public lazy_context_ignore_invalid_ref shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\File\LazyContext
     */
    protected function get8a659c3269b77f017450246fce119ae557d25df3a610fa1165dd1806593bf3c8(): \Viserio\Component\Container\Tests\Fixture\File\LazyContext
    {
        include_once $this->targetDir.''.'/File/LazyContext.php';

        return $this->services['lazy_context_ignore_invalid_ref'] = new \Viserio\Component\Container\Tests\Fixture\File\LazyContext(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 0 => ($this->services['foo.baz'] ?? $this->getff99b089690198625a3564a7bac09392fbcdf80439a0cd9b69e79c68fb63ba8f());
        }, 1), new \Viserio\Component\Container\RewindableGenerator(static function () {
            return new \EmptyIterator();
        }, 0));
    }

    /**
     * Returns the public method_call1 shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\FooClass
     */
    protected function get0899bb57538ad66e61bbb7a926f8a4d69a751a01a489c784fb2444ac8482d492(): \Viserio\Component\Container\Tests\Fixture\FooClass
    {
        include_once $this->targetDir.''.'/FooClass.php';

        $this->services['method_call1'] = $instance = new \Viserio\Component\Container\Tests\Fixture\FooClass();

        $instance->setBar(($this->services['foo'] ?? $this->get55df4251026261c15e5362b72748729c5413605491a6b31caf07b0571c04af5f()));
        $instance->setBar(null);

        return $instance;
    }

    /**
     * Returns the public new_factory_service shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Definition\ObjectDefinition::getInstance()
     */
    protected function get58b97d8df968af47a0b2821f06d138def536564b0190b530090299c0d9111f98()
    {
        include_once $this->targetDir.''.'/FactoryClass.php';

        return $this->services['new_factory_service'] = new \Viserio\Component\Container\Tests\Fixture\FactoryClass()->getInstance();
    }

    /**
     * Returns the public non_shared_foo service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\FooClass
     */
    protected function getcba1ce6a81e4359bd94e9626a0ddc4a8b6b2f800f12790142b79fe4db7e1dc4a(): \Viserio\Component\Container\Tests\Fixture\FooClass
    {
        include_once $this->targetDir.''.'/FooClass.php';

        return new \Viserio\Component\Container\Tests\Fixture\FooClass();
    }

    /**
     * Returns the public service_from_static_method shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Tests\Fixture\FactoryClass::staticCreate()
     */
    protected function getdc8bbfdfa201402711588c5f8d69cd01bb4b766060eef548d3c0bcee29730ab7()
    {
        include_once $this->targetDir.''.'/FactoryClass.php';

        return $this->services['service_from_static_method'] = \Viserio\Component\Container\Tests\Fixture\FactoryClass::staticCreate();
    }

    /**
     * Returns the private factory_simple shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\FactoryClass
     *
     * @deprecated The [factory_simple] service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function get0ee2675938f7c7d7d93d4233ea06b7dba8af47f490245918357abd64c3653e01(): \Viserio\Component\Container\Tests\Fixture\FactoryClass
    {
        @\trigger_error('The [factory_simple] service is deprecated. You should stop using it, as it will be removed in the future.', \E_USER_DEPRECATED);

        return new \Viserio\Component\Container\Tests\Fixture\FactoryClass('foo');
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return require $this->containerDir.'/removed-ids.php';
    }
}

    [PhpDumperContainerTestDumpAsFilesWithFactoriesInlined.php] => <?php

declare(strict_types=1);

/**
 * This class has been auto-generated by Viserio Container Component.
 */

if (\class_exists(\Container%s\PhpDumperContainerTestDumpAsFilesWithFactoriesInlined::class, false)) {
    // no-op
} elseif (!include __DIR__.'/Container%s/PhpDumperContainerTestDumpAsFilesWithFactoriesInlined.php') {
    touch(__DIR__.'/Container%s.legacy');
    return;
}

if (!\class_exists(PhpDumperContainerTestDumpAsFilesWithFactoriesInlined::class, false)) {
    \class_alias(\Container%s\PhpDumperContainerTestDumpAsFilesWithFactoriesInlined::class, PhpDumperContainerTestDumpAsFilesWithFactoriesInlined::class, false);
}

return new \Container%s\PhpDumperContainerTestDumpAsFilesWithFactoriesInlined([
    'container.build_hash' => '%s',
    'container.build_id' => '%s',
    'container.build_time' => %s,
], __DIR__.'/Container%s');

)
