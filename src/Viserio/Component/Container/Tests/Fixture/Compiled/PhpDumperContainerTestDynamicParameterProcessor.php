<?php

declare(strict_types=1);

namespace Viserio\Component\Container\Tests\Integration\Dumper\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class PhpDumperContainerTestDynamicParameterProcessor extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
    * The stack of concretions currently being built.
    *
     * @var array<string, bool>
     */
    private array $resolvingDynamicParameters = [];

    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->parameters = [
            'bar' => 'Bar',
            'viserio.container.runtime.parameter.processor.types' => [
                'foo' => [
                    0 => 'string',
                ],
                'resolve' => [
                    0 => 'string',
                ],
                'bool' => [
                    0 => 'bool',
                ],
                'float' => [
                    0 => 'float',
                ],
                'int' => [
                    0 => 'int',
                ],
                'string' => [
                    0 => 'string',
                ],
                'trim' => [
                    0 => 'string',
                ],
                'json' => [
                    0 => 'array',
                ],
                'json_decode' => [
                    0 => 'array',
                ],
                'base64' => [
                    0 => 'string',
                ],
                'base64_decode' => [
                    0 => 'string',
                ],
                'env' => [
                    0 => 'bool',
                    1 => 'int',
                    2 => 'float',
                    3 => 'string',
                    4 => 'array',
                ],
            ],
        ];
        $this->loadedDynamicParameters = [
            'foo' => false,
            'baz' => false,
            'foo2' => false,
            'json' => false,
            'foo3' => false,
        ];
        $this->dynamicParameterMapper = [];
        $this->methodMapping = [
            'class' => 'get4e34fa10ecb7840ffc64cfdc5bc5047ed9abaf31405d3b2fdc1d5ecac5cfa486',
            'class_with_array' => 'get88945f08b61e04306e4cb1064226357f51f76fb3c62c1695fe7443cadbca631b',
            'viserio.container.runtime.parameter.processors' => 'gete72852784fbbbd62bbac5a8aec7e44d0acb18db0dd6a35a841780313b22837ff',
        ];
    }

    /**
     * {@inheritDoc}
     */
    public function getParameters(): array
    {
        return \array_merge(parent::getParameters(), $this->dynamicParameterMapper);
    }

    /**
     * Returns the public class service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\ConstructValueClass
     */
    protected function get4e34fa10ecb7840ffc64cfdc5bc5047ed9abaf31405d3b2fdc1d5ecac5cfa486(): \Viserio\Component\Container\Tests\Fixture\ConstructValueClass
    {
        return new \Viserio\Component\Container\Tests\Fixture\ConstructValueClass('Bar');
    }

    /**
     * Returns the public class_with_array service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\ConstructValueClass
     */
    protected function get88945f08b61e04306e4cb1064226357f51f76fb3c62c1695fe7443cadbca631b(): \Viserio\Component\Container\Tests\Fixture\ConstructValueClass
    {
        return new \Viserio\Component\Container\Tests\Fixture\ConstructValueClass([
            0 => 'Bar',
            1 => $this->processParameter('{baz|foo}'),
        ]);
    }

    /**
     * Returns the public viserio.container.runtime.parameter.processors shared service.
     *
     * @return \Viserio\Component\Container\RewindableGenerator
     */
    protected function gete72852784fbbbd62bbac5a8aec7e44d0acb18db0dd6a35a841780313b22837ff(): \Viserio\Component\Container\RewindableGenerator
    {
        return $this->services['viserio.container.runtime.parameter.processors'] = new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 0 => ($this->privates[\Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor::class] ?? $this->get6c239ca061598a1ae50ce1bba74034990693436568d7dd0b140dfe490239c7f8());
            yield 1 => ($this->privates[\Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor::class] ?? $this->get97a5042e82056c180e9f609f9d22f762107415e7f5a54aee4d300d58837d927a());
            yield 2 => ($this->privates[\Viserio\Component\Container\Processor\PhpTypeParameterProcessor::class] ?? $this->get2da684770948d9fcbf97ffd088bcc2bd665052e76f56071a357041cc707d0499());
            yield 3 => ($this->privates[\Viserio\Component\Container\Processor\JsonParameterProcessor::class] ?? $this->get9e0e9d9db4c9b8d40aea977458e56cb4c5bd9304c6f00f96e938c28579115a4c());
            yield 4 => ($this->privates[\Viserio\Component\Container\Processor\Base64ParameterProcessor::class] ?? $this->get29807369f2cb20168567cd8c9c3307a999a9572cda920acaeca48ab20c5a1987());
            yield 5 => ($this->privates[\Viserio\Component\Container\Processor\EnvParameterProcessor::class] ?? $this->getf2b69a4533503376ddade957f0f4242967826e7f25fb7a36e11e0b3441e0735b());
        }, 6);
    }

    /**
     * Returns the private Viserio\Component\Container\Processor\Base64ParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Processor\Base64ParameterProcessor
     */
    protected function get29807369f2cb20168567cd8c9c3307a999a9572cda920acaeca48ab20c5a1987(): \Viserio\Component\Container\Processor\Base64ParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Processor\Base64ParameterProcessor::class] = new \Viserio\Component\Container\Processor\Base64ParameterProcessor();
    }

    /**
     * Returns the private Viserio\Component\Container\Processor\EnvParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Processor\EnvParameterProcessor
     */
    protected function getf2b69a4533503376ddade957f0f4242967826e7f25fb7a36e11e0b3441e0735b(): \Viserio\Component\Container\Processor\EnvParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Processor\EnvParameterProcessor::class] = new \Viserio\Component\Container\Processor\EnvParameterProcessor();
    }

    /**
     * Returns the private Viserio\Component\Container\Processor\JsonParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Processor\JsonParameterProcessor
     */
    protected function get9e0e9d9db4c9b8d40aea977458e56cb4c5bd9304c6f00f96e938c28579115a4c(): \Viserio\Component\Container\Processor\JsonParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Processor\JsonParameterProcessor::class] = new \Viserio\Component\Container\Processor\JsonParameterProcessor();
    }

    /**
     * Returns the private Viserio\Component\Container\Processor\PhpTypeParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Processor\PhpTypeParameterProcessor
     */
    protected function get2da684770948d9fcbf97ffd088bcc2bd665052e76f56071a357041cc707d0499(): \Viserio\Component\Container\Processor\PhpTypeParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Processor\PhpTypeParameterProcessor::class] = new \Viserio\Component\Container\Processor\PhpTypeParameterProcessor();
    }

    /**
     * Returns the private Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor
     */
    protected function get97a5042e82056c180e9f609f9d22f762107415e7f5a54aee4d300d58837d927a(): \Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor::class] = new \Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor($this);
    }

    /**
     * Returns the private Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor shared service.
     *
     * @return \Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor
     */
    protected function get6c239ca061598a1ae50ce1bba74034990693436568d7dd0b140dfe490239c7f8(): \Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor
    {
        return $this->privates[\Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor::class] = new \Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor();
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Component\Container\Processor\Base64ParameterProcessor::class => true,
            \Viserio\Component\Container\Processor\EnvParameterProcessor::class => true,
            \Viserio\Component\Container\Processor\JsonParameterProcessor::class => true,
            \Viserio\Component\Container\Processor\PhpTypeParameterProcessor::class => true,
            \Viserio\Component\Container\Processor\ResolveRuntimeParameterProcessor::class => true,
            \Viserio\Component\Container\Tests\Fixture\Processor\FooParameterProcessor::class => true,
            \Viserio\Contract\Container\CompiledContainer::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
            'viserio.container.parameter.processors' => true,
        ];
    }

    /**
     * {@inheritdoc}
     */
    protected function doGetParameter(string $id)
    {
        switch ($id) {
            case 'foo': $value = $this->processParameter('Foo{DUMMY_BAR|env|resolve}'); break;
            case 'baz': $value = $this->processParameter('{DUMMY_FOO|env|resolve}'); break;
            case 'foo2': $value = $this->processParameter('{baz|foo}'); break;
            case 'json': $value = $this->processParameter('{W10=|base64_decode|json_decode}'); break;
            case 'foo3': $value = $this->processParameter('bar.{baz|foo}'); break;

            default: return parent::doGetParameter($id);
        }

        $this->loadedDynamicParameters[$id] = true;

        return $this->dynamicParameters[$id] = \is_array($value) ? \array_merge_recursive($value, $this->dynamicParameterMapper[$id] ?? []) : $value;
    }

    /**
     * Process through value.
     *
     * @param string $expression
     *
     * @return int|string|float|bool
     */
    private function processParameter($expression)
    {
        if (\preg_match('/\{(.+)\|(.*)\}/U', $expression, $matches) === 0) {
            return $expression;
        }

        $value = \array_reduce(\explode('|', $matches[2]), function ($carry, string $method) use ($expression) {
            if ($carry === null) {
                return null;
            }

            $value = "{$carry}|{$method}";

            if (\array_key_exists($value, $this->resolvingDynamicParameters)) {
                throw new \Viserio\Contract\Container\Exception\CircularParameterException($expression, \array_keys($this->resolvingDynamicParameters));
            }

            /** @var \Viserio\Contract\Container\Processor\ParameterProcessor $processor */
            foreach ($this->get('viserio.container.runtime.parameter.processors') as $processor) {
                if ($processor->supports($value)) {
                    $this->resolvingDynamicParameters[$value] = true;

                    return $processor->process($value);
                }
            }
        }, $matches[1]);


        $this->resolvingDynamicParameters = [];

        if (\is_string($value)) {
            return \str_replace($matches[0], $value, $expression);
        }

        return $value;
    }
}
