<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Config\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class ConfigServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class => 'getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31',
            \Viserio\Component\Config\Command\ConfigCacheCommand::class => 'get84d58a3ba822be935850e8e8481cdf2592d8673d55a6e2f8c70316ee6bbb319d',
            \Viserio\Component\Config\Command\ConfigClearCommand::class => 'get0bd786dbe8504de8d66c9c21f2058290fbd2c0a337e5e946746a21d611703ed4',
            \Viserio\Component\Console\Application::class => 'get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a',
            \Viserio\Contract\Config\Repository::class => 'getdf1c31fe4ba52c5a58984206611ddc1ed0e532dc8d86e860064543054d395666',
            \Viserio\Contract\Parser\Loader::class => 'get4646b0391e1ce02b23243f2fcf94fb8ec2b8b3b9c7b849566f86ddb2f0724fcd',
            'console.command.ids' => 'getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18',
        ];
        $this->aliases = [
            \Symfony\Component\Console\Application::class => \Viserio\Component\Console\Application::class,
            \Viserio\Component\Config\Repository::class => \Viserio\Contract\Config\Repository::class,
            'cerebro' => \Viserio\Component\Console\Application::class,
            'config' => \Viserio\Contract\Config\Repository::class,
            'console' => \Viserio\Component\Console\Application::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }

    /**
     * Returns the public Symfony\Component\Console\CommandLoader\CommandLoaderInterface shared service.
     *
     * @return \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
     */
    protected function getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31(): \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
    {
        return $this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] = new \Viserio\Component\Console\CommandLoader\IteratorCommandLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'config:cache' => ($this->services[\Viserio\Component\Config\Command\ConfigCacheCommand::class] ?? $this->get84d58a3ba822be935850e8e8481cdf2592d8673d55a6e2f8c70316ee6bbb319d());

            yield 'config:clear' => ($this->services[\Viserio\Component\Config\Command\ConfigClearCommand::class] ?? $this->get0bd786dbe8504de8d66c9c21f2058290fbd2c0a337e5e946746a21d611703ed4());
        }, 2));
    }

    /**
     * Returns the public Viserio\Component\Config\Command\ConfigCacheCommand shared service.
     *
     * @return \Viserio\Component\Config\Command\ConfigCacheCommand
     */
    protected function get84d58a3ba822be935850e8e8481cdf2592d8673d55a6e2f8c70316ee6bbb319d(): \Viserio\Component\Config\Command\ConfigCacheCommand
    {
        $this->services[\Viserio\Component\Config\Command\ConfigCacheCommand::class] = $instance = new \Viserio\Component\Config\Command\ConfigCacheCommand();

        $instance->setName('config:cache');

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Config\Command\ConfigClearCommand shared service.
     *
     * @return \Viserio\Component\Config\Command\ConfigClearCommand
     */
    protected function get0bd786dbe8504de8d66c9c21f2058290fbd2c0a337e5e946746a21d611703ed4(): \Viserio\Component\Config\Command\ConfigClearCommand
    {
        $this->services[\Viserio\Component\Config\Command\ConfigClearCommand::class] = $instance = new \Viserio\Component\Config\Command\ConfigClearCommand();

        $instance->setName('config:clear');

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Console\Application shared service.
     *
     * @return \Viserio\Component\Console\Application
     */
    protected function get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a(): \Viserio\Component\Console\Application
    {
        $this->services[\Viserio\Component\Console\Application::class] = $instance = new \Viserio\Component\Console\Application();

        $instance->setContainer($this);

        if ($this->has(\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class)) {
            $instance->setCommandLoader(($this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] ?? $this->getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31()));
        }

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\Config\Repository shared service.
     *
     * @return \Viserio\Component\Config\Repository
     */
    protected function getdf1c31fe4ba52c5a58984206611ddc1ed0e532dc8d86e860064543054d395666(): \Viserio\Component\Config\Repository
    {
        $this->services[\Viserio\Contract\Config\Repository::class] = $instance = new \Viserio\Component\Config\Repository();

        $instance->setLoader(new \Viserio\Component\Parser\FileLoader());
        $instance->addParameterProcessor(new \Viserio\Component\Config\ParameterProcessor\EnvParameterProcessor());

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\Parser\Loader service.
     *
     * @return \Viserio\Component\Parser\FileLoader
     */
    protected function get4646b0391e1ce02b23243f2fcf94fb8ec2b8b3b9c7b849566f86ddb2f0724fcd(): \Viserio\Component\Parser\FileLoader
    {
        return new \Viserio\Component\Parser\FileLoader();
    }

    /**
     * Returns the public console.command.ids service.
     *
     * @return array
     */
    protected function getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18(): array
    {
        return [];
    }
}
