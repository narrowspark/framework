<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\Config\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class ConfigServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Viserio\Component\Console\Application::class => 'get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a',
            \Viserio\Contract\Config\Repository::class => 'get3885c3ded72aac03d06e5943735c8ea35ce46c729563fae6265802054ee9adeb',
            \Viserio\Contract\Parser\Loader::class => 'get5f8d0c5e6b975881f4e6c2651a94e4b5aedf48cf788db67a5c5935449c01c28b',
        ];
        $this->aliases = [
            \Symfony\Component\Console\Application::class => \Viserio\Component\Console\Application::class,
            \Viserio\Component\Config\Repository::class => \Viserio\Contract\Config\Repository::class,
            'cerebro' => \Viserio\Component\Console\Application::class,
            'config' => \Viserio\Contract\Config\Repository::class,
            'console' => \Viserio\Component\Console\Application::class,
        ];
    }

    /**
     * Returns the public Viserio\Component\Console\Application shared service.
     *
     * @return \Viserio\Component\Console\Application
     */
    protected function get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a(): \Viserio\Component\Console\Application
    {
        $this->services[\Viserio\Component\Console\Application::class] = $instance = new \Viserio\Component\Console\Application();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\Config\Repository shared service.
     *
     * @return \Viserio\Component\Config\Repository
     */
    protected function get3885c3ded72aac03d06e5943735c8ea35ce46c729563fae6265802054ee9adeb(): \Viserio\Component\Config\Repository
    {
        $this->services[\Viserio\Contract\Config\Repository::class] = $instance = new \Viserio\Component\Config\Repository();

        $instance->setLoader(new \Viserio\Component\Parser\FileLoader());
        $instance->addParameterProcessor(new \Viserio\Component\Config\ParameterProcessor\EnvParameterProcessor());

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\Parser\Loader service.
     *
     * @return \Viserio\Component\Parser\FileLoader
     */
    protected function get5f8d0c5e6b975881f4e6c2651a94e4b5aedf48cf788db67a5c5935449c01c28b(): \Viserio\Component\Parser\FileLoader
    {
        return new \Viserio\Component\Parser\FileLoader();
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            \Viserio\Contract\Events\EventManager::class => true,
            'container' => true,
        ];
    }
}
