<?php

declare(strict_types=1);

namespace Viserio\Component\OptionsResolver\Tests\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class OptionsResolverServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class => 'getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31',
            \Viserio\Component\Console\Application::class => 'get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a',
            \Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class => 'get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62',
            \Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class => 'get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471',
            'config' => 'get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256',
            'console.command.ids' => 'getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18',
        ];
        $this->aliases = [
            \Symfony\Component\Console\Application::class => \Viserio\Component\Console\Application::class,
            'cerebro' => \Viserio\Component\Console\Application::class,
            'console' => \Viserio\Component\Console\Application::class,
        ];
    }

    /**
     * Returns the public Symfony\Component\Console\CommandLoader\CommandLoaderInterface shared service.
     *
     * @return \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
     */
    protected function getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31(): \Viserio\Component\Console\CommandLoader\IteratorCommandLoader
    {
        return $this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] = new \Viserio\Component\Console\CommandLoader\IteratorCommandLoader(new \Viserio\Component\Container\RewindableGenerator(function () {
            yield 'option:dump' => ($this->services[\Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class] ?? $this->get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62());
            yield 'option:read' => ($this->services[\Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class] ?? $this->get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471());
        }, 2));
    }

    /**
     * Returns the public Viserio\Component\Console\Application shared service.
     *
     * @return \Viserio\Component\Console\Application
     */
    protected function get206058a713a7172158e11c9d996f6a067c294ab0356ae6697060f162e057445a(): \Viserio\Component\Console\Application
    {
        $this->services[\Viserio\Component\Console\Application::class] = $instance = new \Viserio\Component\Console\Application();

        $instance->setContainer($this);
        if ($this->has(\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class)) {
            $instance->setCommandLoader(($this->services[\Symfony\Component\Console\CommandLoader\CommandLoaderInterface::class] ?? $this->getce817e8bdc75399a693ba45b876c457a0f7fd422258f7d4eabc553987c2fbd31()));
        }

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Config\Command\OptionDumpCommand shared service.
     *
     * @return \Viserio\Component\Config\Command\OptionDumpCommand
     */
    protected function get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62(): \Viserio\Component\OptionsResolver\Command\OptionDumpCommand
    {
        $this->services[\Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class] = $instance = new \Viserio\Component\OptionsResolver\Command\OptionDumpCommand();

        $instance->setName('option:dump');

        return $instance;
    }

    /**
     * Returns the public Viserio\Component\Config\Command\OptionReaderCommand shared service.
     *
     * @return \Viserio\Component\Config\Command\OptionReaderCommand
     */
    protected function get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471(): \Viserio\Component\OptionsResolver\Command\OptionReaderCommand
    {
        $this->services[\Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class] = $instance = new \Viserio\Component\OptionsResolver\Command\OptionReaderCommand();

        $instance->setName('option:read');

        return $instance;
    }

    /**
     * Returns the public config service.
     *
     * @return array
     */
    protected function get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256(): array
    {
        return [];
    }

    /**
     * Returns the public console.command.ids service.
     *
     * @return array
     */
    protected function getdbce155f9c0e95dbd4bfbfaadab27eb79915789fa80c6c65068ccf60c9ef9e18(): array
    {
        return [];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\CompiledContainer::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }
}
