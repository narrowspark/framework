<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace ContainerC840be5a626a0086c4031c25a32260d1b415406652cbcc4e146b99bc52929bf9;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class TranslatorServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * List of target dirs.
     *
     * @var array
     */
    private $targetDirs = [];

    /**
     * Path to the container dir.
     *
     * @var string
     */
    private $containerDir;

    /**
     * Create a new Compiled Container instance.
     *
     * @param array  $buildParameters
     * @param string $containerDir
     *
     * @var string $containerDir
     */
    public function __construct(array $buildParameters = [], string $containerDir = __DIR__)
    {
        $this->services = $this->privates = [];
        $dir = $this->targetDirs[0] = \dirname($containerDir);

        for ($i = 1; $i <= 5; $i++) {
            $this->targetDirs[$i] = $dir = \dirname($dir);
        }

        $this->containerDir = $containerDir;
        $this->parameters = \array_merge([
            'container.dumper.inline_factories' => true,
            'container.dumper.inline_class_loader' => false,
        ], $buildParameters);
        $this->methodMapping = [
            \Viserio\Contract\Parser\Loader::class => 'get4646b0391e1ce02b23243f2fcf94fb8ec2b8b3b9c7b849566f86ddb2f0724fcd',
            \Viserio\Contract\Translation\MessageFormatter::class => 'getb66cec44b102aaaeb12e90cec5084d24db5bcd7d6baa13fdb9e7b4af3036380f',
            \Viserio\Contract\Translation\TranslationManager::class => 'get45f97e56517e49f05949ecfca68863bc1b51d49365611cd4853d7b5a4d8b3d57',
            \Viserio\Contract\Translation\Translator::class => 'get3ebbc402cfa48867102b63eddf2da406f18214896d822ecddb893690cb5d19fb',
            \Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class => 'get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62',
            \Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class => 'get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471',
            \Viserio\Component\Parser\Dumper::class => 'get6344d2ab22689059abefa874afb9b38e9a85eb79ec642b197ba4cf86123dbea1',
            \Viserio\Component\Parser\GroupParser::class => 'getb395e16f6c98204c09eec44978726308a3c59138ae760a6fa39a2fca6127e823',
            \Viserio\Component\Parser\Parser::class => 'get919883ff517b9cfb3d69a7cfef7aca625f4f6d700fb5ce0d218d7f7ca981023e',
            \Viserio\Component\Parser\TaggableParser::class => 'get73f349ed998033f0cf51827574e0718ddf857ea577ecaace91ccba30117cfbf8',
            'config' => 'get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256',
        ];
        $this->uninitializedServices = [
            \Psr\Log\LoggerInterface::class => true,
        ];
        $this->aliases = [
            \Viserio\Component\Parser\FileLoader::class => \Viserio\Contract\Parser\Loader::class,
            \Viserio\Component\Translation\TranslationManager::class => \Viserio\Contract\Translation\TranslationManager::class,
            'parser' => \Viserio\Component\Parser\Parser::class,
            'translator' => \Viserio\Contract\Translation\Translator::class,
        ];
        $this->syntheticIds = [
            \Psr\Log\LoggerInterface::class => true,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return require $this->containerDir . '/removed-ids.php';
    }

    /**
     * Returns the public Viserio\Contract\Parser\Loader shared service.
     *
     * @return \Viserio\Component\Parser\FileLoader
     */
    protected function get4646b0391e1ce02b23243f2fcf94fb8ec2b8b3b9c7b849566f86ddb2f0724fcd(): \Viserio\Component\Parser\FileLoader
    {
        return $this->services[\Viserio\Contract\Parser\Loader::class] = new \Viserio\Component\Parser\FileLoader();
    }

    /**
     * Returns the public Viserio\Contract\Translation\MessageFormatter shared service.
     *
     * @return \Viserio\Component\Translation\Formatter\IntlMessageFormatter
     */
    protected function getb66cec44b102aaaeb12e90cec5084d24db5bcd7d6baa13fdb9e7b4af3036380f(): \Viserio\Component\Translation\Formatter\IntlMessageFormatter
    {
        return $this->services[\Viserio\Contract\Translation\MessageFormatter::class] = new \Viserio\Component\Translation\Formatter\IntlMessageFormatter();
    }

    /**
     * Returns the public Viserio\Contract\Translation\TranslationManager shared service.
     *
     * @return \Viserio\Component\Translation\TranslationManager
     */
    protected function get45f97e56517e49f05949ecfca68863bc1b51d49365611cd4853d7b5a4d8b3d57(): \Viserio\Component\Translation\TranslationManager
    {
        $this->services[\Viserio\Contract\Translation\TranslationManager::class] = $instance = new \Viserio\Component\Translation\TranslationManager(($this->services[\Viserio\Contract\Translation\MessageFormatter::class] ?? $this->getb66cec44b102aaaeb12e90cec5084d24db5bcd7d6baa13fdb9e7b4af3036380f()));

        $instance->setLocale('en');
        $instance->setDirectories([
            0 => $this->targetDirs[1],
        ]);

        if (isset($this->services[\Psr\Log\LoggerInterface::class])) {
            $instance->setLogger(($this->services[\Psr\Log\LoggerInterface::class] ?? $this->get(\Psr\Log\LoggerInterface::class)));
        }
        $instance->setLoader(($this->services[\Viserio\Contract\Parser\Loader::class] ?? $this->get4646b0391e1ce02b23243f2fcf94fb8ec2b8b3b9c7b849566f86ddb2f0724fcd()));
        $instance->import('vfs://root/temp.php');

        return $instance;
    }

    /**
     * Returns the public Viserio\Contract\Translation\Translator shared service.
     *
     * @return mixed An instance returned by \Viserio\Component\Container\Definition\ReferenceDefinition::getTranslator()
     */
    protected function get3ebbc402cfa48867102b63eddf2da406f18214896d822ecddb893690cb5d19fb()
    {
        return $this->services[\Viserio\Contract\Translation\Translator::class] = ($this->services[\Viserio\Contract\Translation\TranslationManager::class] ?? $this->get45f97e56517e49f05949ecfca68863bc1b51d49365611cd4853d7b5a4d8b3d57())->getTranslator();
    }

    /**
     * Returns the public Viserio\Component\OptionsResolver\Command\OptionDumpCommand shared service.
     *
     * @return \Viserio\Component\OptionsResolver\Command\OptionDumpCommand
     */
    protected function get5a73c93dbe469f9f1fae0210ee64ef2ab32ed536467d0570a89353766859bb62(): \Viserio\Component\OptionsResolver\Command\OptionDumpCommand
    {
        return $this->services[\Viserio\Component\OptionsResolver\Command\OptionDumpCommand::class] = new \Viserio\Component\OptionsResolver\Command\OptionDumpCommand();
    }

    /**
     * Returns the public Viserio\Component\OptionsResolver\Command\OptionReaderCommand shared service.
     *
     * @return \Viserio\Component\OptionsResolver\Command\OptionReaderCommand
     */
    protected function get51bc2cdf2d87fcaa6a89ede54bc023ccfe784ddb4cc7a7e2be4ab3a7e9204471(): \Viserio\Component\OptionsResolver\Command\OptionReaderCommand
    {
        return $this->services[\Viserio\Component\OptionsResolver\Command\OptionReaderCommand::class] = new \Viserio\Component\OptionsResolver\Command\OptionReaderCommand();
    }

    /**
     * Returns the public Viserio\Component\Parser\Dumper shared service.
     *
     * @return \Viserio\Component\Parser\Dumper
     */
    protected function get6344d2ab22689059abefa874afb9b38e9a85eb79ec642b197ba4cf86123dbea1(): \Viserio\Component\Parser\Dumper
    {
        return $this->services[\Viserio\Component\Parser\Dumper::class] = new \Viserio\Component\Parser\Dumper();
    }

    /**
     * Returns the public Viserio\Component\Parser\GroupParser shared service.
     *
     * @return \Viserio\Component\Parser\GroupParser
     */
    protected function getb395e16f6c98204c09eec44978726308a3c59138ae760a6fa39a2fca6127e823(): \Viserio\Component\Parser\GroupParser
    {
        return $this->services[\Viserio\Component\Parser\GroupParser::class] = new \Viserio\Component\Parser\GroupParser();
    }

    /**
     * Returns the public Viserio\Component\Parser\Parser shared service.
     *
     * @return \Viserio\Component\Parser\Parser
     */
    protected function get919883ff517b9cfb3d69a7cfef7aca625f4f6d700fb5ce0d218d7f7ca981023e(): \Viserio\Component\Parser\Parser
    {
        return $this->services[\Viserio\Component\Parser\Parser::class] = new \Viserio\Component\Parser\Parser();
    }

    /**
     * Returns the public Viserio\Component\Parser\TaggableParser shared service.
     *
     * @return \Viserio\Component\Parser\TaggableParser
     */
    protected function get73f349ed998033f0cf51827574e0718ddf857ea577ecaace91ccba30117cfbf8(): \Viserio\Component\Parser\TaggableParser
    {
        return $this->services[\Viserio\Component\Parser\TaggableParser::class] = new \Viserio\Component\Parser\TaggableParser();
    }

    /**
     * Returns the public config service.
     *
     * @return array
     */
    protected function get34bcaa5afa8745d92e6161e8495be3b939c5c6abb4dc2fd1f5a3cfdaba620256(): array
    {
        return [
            'viserio' => [
                'translation' => [
                    'locale' => 'en',
                    'files' => 'vfs://root/temp.php',
                    'directories' => [
                        0 => $this->targetDirs[1],
                    ],
                ],
            ],
        ];
    }
}
