<?php

declare(strict_types=1);

/**
 * This file is part of Narrowspark Framework.
 *
 * (c) Daniel Bannert <d.bannert@anolilab.de>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Viserio\Component\HttpFactory\Tests\Container\Provider\Compiled;

/**
 * This class has been auto-generated by Viserio Container Component.
 */
final class HttpFactoryServiceProviderContainer extends \Viserio\Component\Container\AbstractCompiledContainer
{
    /**
     * Create a new Compiled Container instance.
     */
    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMapping = [
            \Psr\Http\Message\RequestFactoryInterface::class => 'getef97f0bcda07c062701f26c9b3469bc1cc5d4e690f06f38d62089dcd523e5878',
            \Psr\Http\Message\ResponseFactoryInterface::class => 'get2d91ce2b646e11cd19e34bcc1c7ac36869d3c26f204ab659c91ddaacfcf7a387',
            \Psr\Http\Message\ServerRequestFactoryInterface::class => 'get7087ed87890b3b08220b4aa3de8f288397365878109fe8d4fb5deff3658ce6f1',
            \Psr\Http\Message\StreamFactoryInterface::class => 'getf55873d449ac864fac76bef8b64ad9303cdec09695e157278c9239bd952475bf',
            \Psr\Http\Message\UploadedFileFactoryInterface::class => 'get4e26902efbb16d7b57d6675c0e728f470fe403dde66b42fa75c8da91885c8976',
            \Psr\Http\Message\UriFactoryInterface::class => 'get6efc5ddbff5b9d058c48b4514c1f9ea8e4e3006a3fab6a03b46065a08a86260d',
        ];
        $this->aliases = [
            \Viserio\Component\HttpFactory\RequestFactory::class => \Psr\Http\Message\RequestFactoryInterface::class,
            \Viserio\Component\HttpFactory\ResponseFactory::class => \Psr\Http\Message\ResponseFactoryInterface::class,
            \Viserio\Component\HttpFactory\ServerRequestFactory::class => \Psr\Http\Message\ServerRequestFactoryInterface::class,
            \Viserio\Component\HttpFactory\StreamFactory::class => \Psr\Http\Message\StreamFactoryInterface::class,
            \Viserio\Component\HttpFactory\UploadedFileFactory::class => \Psr\Http\Message\UploadedFileFactoryInterface::class,
            \Viserio\Component\HttpFactory\UriFactory::class => \Psr\Http\Message\UriFactoryInterface::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getRemovedIds(): array
    {
        return [
            \Psr\Container\ContainerInterface::class => true,
            \Viserio\Contract\Container\Factory::class => true,
            \Viserio\Contract\Container\TaggedContainer::class => true,
            'container' => true,
        ];
    }

    /**
     * Returns the public Psr\Http\Message\RequestFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\RequestFactory
     */
    protected function getef97f0bcda07c062701f26c9b3469bc1cc5d4e690f06f38d62089dcd523e5878(): \Viserio\Component\HttpFactory\RequestFactory
    {
        return $this->services[\Psr\Http\Message\RequestFactoryInterface::class] = new \Viserio\Component\HttpFactory\RequestFactory();
    }

    /**
     * Returns the public Psr\Http\Message\ResponseFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\ResponseFactory
     */
    protected function get2d91ce2b646e11cd19e34bcc1c7ac36869d3c26f204ab659c91ddaacfcf7a387(): \Viserio\Component\HttpFactory\ResponseFactory
    {
        return $this->services[\Psr\Http\Message\ResponseFactoryInterface::class] = new \Viserio\Component\HttpFactory\ResponseFactory();
    }

    /**
     * Returns the public Psr\Http\Message\ServerRequestFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\ServerRequestFactory
     */
    protected function get7087ed87890b3b08220b4aa3de8f288397365878109fe8d4fb5deff3658ce6f1(): \Viserio\Component\HttpFactory\ServerRequestFactory
    {
        return $this->services[\Psr\Http\Message\ServerRequestFactoryInterface::class] = new \Viserio\Component\HttpFactory\ServerRequestFactory();
    }

    /**
     * Returns the public Psr\Http\Message\StreamFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\StreamFactory
     */
    protected function getf55873d449ac864fac76bef8b64ad9303cdec09695e157278c9239bd952475bf(): \Viserio\Component\HttpFactory\StreamFactory
    {
        return $this->services[\Psr\Http\Message\StreamFactoryInterface::class] = new \Viserio\Component\HttpFactory\StreamFactory();
    }

    /**
     * Returns the public Psr\Http\Message\UploadedFileFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\UploadedFileFactory
     */
    protected function get4e26902efbb16d7b57d6675c0e728f470fe403dde66b42fa75c8da91885c8976(): \Viserio\Component\HttpFactory\UploadedFileFactory
    {
        return $this->services[\Psr\Http\Message\UploadedFileFactoryInterface::class] = new \Viserio\Component\HttpFactory\UploadedFileFactory();
    }

    /**
     * Returns the public Psr\Http\Message\UriFactoryInterface shared service.
     *
     * @return \Viserio\Component\HttpFactory\UriFactory
     */
    protected function get6efc5ddbff5b9d058c48b4514c1f9ea8e4e3006a3fab6a03b46065a08a86260d(): \Viserio\Component\HttpFactory\UriFactory
    {
        return $this->services[\Psr\Http\Message\UriFactoryInterface::class] = new \Viserio\Component\HttpFactory\UriFactory();
    }
}
